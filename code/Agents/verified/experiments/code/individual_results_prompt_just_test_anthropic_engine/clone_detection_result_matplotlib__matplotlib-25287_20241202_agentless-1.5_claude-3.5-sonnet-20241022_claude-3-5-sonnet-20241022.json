{
    "instance_id": "matplotlib__matplotlib-25287",
    "agent": "20241202_agentless-1.5_claude-3.5-sonnet-20241022",
    "agent_patch": {
        "lib/matplotlib/axis.py": "index 40bf7c6..770e172 100644\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=mpl.rcParams['xtick.color'] if mpl.rcParams['xtick.labelcolor']=='inherit' else mpl.rcParams['xtick.labelcolor'],\n         )\n         self.offset_text_position = 'bottom'\n \n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=mpl.rcParams['ytick.color'] if mpl.rcParams['ytick.labelcolor']=='inherit' else mpl.rcParams['ytick.labelcolor'],\n         )\n         self.offset_text_position = 'left'\n \n"
    },
    "ground_truth_patch": {
        "lib/matplotlib/axis.py": "         )\n         self.label_position = 'bottom'\n \nif mpl.rcParams['xtick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['xtick.color']\nelse:\ntick_color = mpl.rcParams['xtick.labelcolor']\n\n         self.offsetText.set(\n             x=1, y=0,\n             verticalalignment='top', horizontalalignment='right',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'bottom'\n \n                 mtransforms.IdentityTransform(), self.axes.transAxes),\n         )\n         self.label_position = 'left'\n\nif mpl.rcParams['ytick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['ytick.color']\nelse:\ntick_color = mpl.rcParams['ytick.labelcolor']\n\n         # x in axes coords, y in display coords(!).\n         self.offsetText.set(\n             x=0, y=0.5,\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'left'\n \n"
    },
    "response": "{\n\"explanation\": \"The code in code sample 1 sets text properties for axis labels using inline conditional expressions to determine the color based on matplotlib parameters (rcParams). It handles both x-axis and y-axis settings, setting the offset_text_position to either 'bottom' or 'left'. The code in code sample 2 does the same thing functionally but uses a different approach with explicit if-else statements to determine the color, and includes additional positioning parameters (x, y coordinates) and alignment settings in the text properties.\",\n\"is_clone\": true,\n\"classification\": \"type-3\",\n\"reasoning\": \"These code samples are type-3 clones because they perform the same basic functionality (setting text properties for axis labels with color inheritance logic) but with modified statements and structure. The main differences are:\n1. Sample 2 breaks out the color logic into separate if-else statements instead of inline conditionals\n2. Sample 2 adds additional text positioning and alignment parameters\n3. Sample 2 includes more complete context with comments and additional transformations\nThe core logic and purpose remain the same, but the implementation details and some additional functionality have been modified, making this a type-3 clone.\"\n}"
}