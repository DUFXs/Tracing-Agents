{
    "instance_id": "django__django-12419",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/conf/global_settings.py": "index 09c9b95d26..5e30e02773 100644\n SECURE_HSTS_PRELOAD = False\n SECURE_HSTS_SECONDS = 0\n SECURE_REDIRECT_EXEMPT = []\nSECURE_REFERRER_POLICY = \"same-origin\"\n SECURE_SSL_HOST = None\n SECURE_SSL_REDIRECT = False\n",
        "scripts/test_referrer_policy_check.py": "new file mode 100644\nindex 0000000000..9446843e16\n#!/usr/bin/env python\nimport sys\n\ndef main():\nprint(\"Step 1: Checking default Referrer-Policy on HEAD.\")\n\nfrom django.conf import settings\nimport django\n\ncustom_settings = {\n\"INSTALLED_APPS\": [],\n\"MIDDLEWARE\": [\"django.middleware.security.SecurityMiddleware\"],\n\"ROOT_URLCONF\": \"scripts.test_referrer_urls\",\n\"SECRET_KEY\": \"secret\",\n\"DEBUG\": True,\n\"LOGGING_CONFIG\": None,\n\"LOGGING\": {\n\"version\": 1,\n\"disable_existing_loggers\": False,\n},\n}\n\nif not settings.configured:\nsettings.configure(**custom_settings)\ndjango.setup()\n\nfrom django.test import Client\n\nclient = Client()\nresponse = client.get(\"/\")\nreferrer_policy = response.get(\"Referrer-Policy\", None)\nprint(\"Referrer-Policy:\", referrer_policy)\n# We expect \"same-origin\". If it isn't, fail.\nif referrer_policy == \"same-origin\":\nprint(\"Referrer-Policy is same-origin. Problem is presumably fixed.\")\nsys.exit(0)\nelse:\nprint(\"Referrer-Policy is NOT same-origin. The problem is still present.\")\nsys.exit(1)\n\nif __name__ == \"__main__\":\nmain()\n",
        "scripts/test_referrer_urls.py": "new file mode 100644\nindex 0000000000..6f175722f6\nfrom django.http import HttpResponse\nfrom django.urls import path\n\ndef index(request):\nreturn HttpResponse(\"Test response\")\n\nurlpatterns = [\npath(\"\", index),\n]\n",
        "tests/project_template/test_settings.py": "index 5617f4a943..8b756ccfe1 100644\n         \"\"\"\n         with extend_sys_path(self.temp_dir.name):\n             from test_settings import MIDDLEWARE\n\n         with self.settings(\n             MIDDLEWARE=MIDDLEWARE,\n             ROOT_URLCONF='project_template.urls',\n             self.assertEqual(headers, [\n                 b'Content-Length: 0',\n                 b'Content-Type: text/html; charset=utf-8',\nb'Referrer-Policy: same-origin',\n                 b'X-Content-Type-Options: nosniff',\n                 b'X-Frame-Options: DENY',\n             ])\n\n"
    },
    "ground_truth_patch": {
        "django/conf/global_settings.py": " SECURE_HSTS_PRELOAD = False\n SECURE_HSTS_SECONDS = 0\n SECURE_REDIRECT_EXEMPT = []\nSECURE_REFERRER_POLICY = 'same-origin'\n SECURE_SSL_HOST = None\n SECURE_SSL_REDIRECT = False\n"
    },
    "response": "{\"explanation\": \"The code in code sample 1 shows a patch that modifies the settings of a Django application, specifically in 'global_settings.py', and the list of installed apps for testing purposes. The code snippet includes various security settings. The code in code sample 2 simply contains a portion of a patch modifying the same settings in the 'global_settings.py' file, specifically the 'SECURE_REFERRER_POLICY' line and is similar but presented differently (using single quotes instead of double).\", \"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for the difference in quotation marks used for the string (double quotes vs single quotes) and minor whitespace differences.\"}"
}