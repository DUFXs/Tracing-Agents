{
    "instance_id": "django__django-11790",
    "agent": "20250110_learn_by_interact_claude3.5",
    "agent_patch": {
        "django/contrib/auth/forms.py": "index a0cfed0995..efefe50482 100644\n \n         # Set the max length and label for the \"username\" field.\n         self.username_field = UserModel._meta.get_field(UserModel.USERNAME_FIELD)\nmax_length = self.username_field.max_length or 254\nself.fields['username'].max_length = max_length\nself.fields['username'].widget.attrs['maxlength'] = max_length\n         if self.fields['username'].label is None:\n\n             self.fields['username'].label = capfirst(self.username_field.verbose_name)\n \n     def clean(self):\n             if name not in data:\n                 return []\n         return ['password']\n\n",
        "reproduce.py": "new file mode 100644\nindex 0000000000..92e3b56054\nfrom django.conf import settings\nsettings.configure(\nINSTALLED_APPS=[\n'django.contrib.auth',\n'django.contrib.contenttypes',\n],\nDATABASES={\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n}\n}\n)\n\nimport django\ndjango.setup()\n\nfrom django.contrib.auth.forms import AuthenticationForm\nfrom django.contrib.auth import get_user_model\n\n# Create a form instance\nform = AuthenticationForm()\n\n# Print the widget attrs to show maxlength is missing\nprint(\"Widget attrs:\", form.fields['username'].widget.attrs)\nprint(\"Field max_length:\", form.fields['username'].max_length)\n"
    },
    "ground_truth_patch": {
        "django/contrib/auth/forms.py": " \n         # Set the max length and label for the \"username\" field.\n         self.username_field = UserModel._meta.get_field(UserModel.USERNAME_FIELD)\nusername_max_length = self.username_field.max_length or 254\nself.fields['username'].max_length = username_max_length\nself.fields['username'].widget.attrs['maxlength'] = username_max_length\n         if self.fields['username'].label is None:\n             self.fields['username'].label = capfirst(self.username_field.verbose_name)\n \n"
    },
    "response": "{\"explanation\": \"The code in code sample 1 sets the maximum length and label for the 'username' field in a Django form based on the corresponding property from the UserModel. It retrieves the max_length from the UserModel and applies it to both the form field and its widget attributes. Additionally, it assigns a label if it's currently None. In code sample 2, the code is similar but makes a small change by using 'username_max_length' as the variable name instead of 'max_length', but it performs the same operations on the 'username' field. Overall, both samples are doing the same things but with a minor difference in variable naming, comments, and formatting. They are nearly identical.\", \"is_clone\": true, \"classification\": \"type-2\", \"reasoning\": \"These code samples are type-2 clones because they are identical except for differences in identifier names, whitespace, and comments.\"}"
}