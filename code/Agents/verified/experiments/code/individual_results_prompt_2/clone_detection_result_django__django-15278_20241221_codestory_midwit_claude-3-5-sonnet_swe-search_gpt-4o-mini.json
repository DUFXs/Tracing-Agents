{
    "instance_id": "django__django-15278",
    "agent": "20241221_codestory_midwit_claude-3-5-sonnet_swe-search",
    "agent_patch": {
        "django/db/backends/sqlite3/schema.py": "index 6752a8e3c0..74eed44e48 100644\n         \"\"\"Create a field on a model.\"\"\"\n         # Fields with default values cannot by handled by ALTER TABLE ADD\n         # COLUMN statement because DROP DEFAULT is not supported in\n# ALTER TABLE. The same applies to unique fields since SQLite\n# doesn't support adding unique columns with ALTER TABLE.\nif not field.null or self.effective_default(field) is not None or field.unique:\n             self._remake_table(model, create_field=field)\n         else:\n             super().add_field(model, field)\n",
        "reproduce_error.py": "new file mode 100644\nindex 0000000000..1299e9db6a\nimport os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_sqlite_settings')\n\nfrom django.conf import settings\nfrom django.db import models, migrations\nfrom django.db.migrations.state import ProjectState\nfrom django.db.migrations.executor import MigrationExecutor\nfrom django.db import connections\n\n# Create test settings\nDATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n}\n}\n\nsettings.configure(\nDEBUG=True,\nDATABASES=DATABASES,\nINSTALLED_APPS=[],\nUSE_TZ=False,\n)\n\nimport django\ndjango.setup()\n\n# Create test models\nclass RefreshToken(models.Model):\nclass Meta:\napp_label = 'test_app'\n\nclass AccessToken(models.Model):\nclass Meta:\napp_label = 'test_app'\nsource_refresh_token = models.OneToOneField(\nRefreshToken,\non_delete=models.SET_NULL,\nnull=True,\nblank=True,\nrelated_name='refreshed_access_token'\n)\n\n# Create and run the migration\nclass TestMigration(migrations.Migration):\ndependencies = []\n\noperations = [\nmigrations.CreateModel(\nname='RefreshToken',\nfields=[\n('id', models.AutoField(primary_key=True)),\n],\n),\nmigrations.CreateModel(\nname='AccessToken',\nfields=[\n('id', models.AutoField(primary_key=True)),\n],\n),\nmigrations.AddField(\nmodel_name='AccessToken',\nname='source_refresh_token',\nfield=models.OneToOneField(\nblank=True,\nnull=True,\non_delete=models.SET_NULL,\nto='RefreshToken',\nrelated_name='refreshed_access_token'\n),\n),\n]\n\n# Run the migration\nconnection = connections['default']\nexecutor = MigrationExecutor(connection)\nproject_state = ProjectState()\nmigration = TestMigration('test_migration', 'test_app')\n\ntry:\nexecutor.apply_migration(project_state, migration)\nprint(\"Migration succeeded - this is unexpected!\")\nexcept Exception as e:\nprint(f\"Migration failed as expected with: {str(e)}\")\n\\ No newline at end of file\n"
    },
    "ground_truth_patch": {
        "django/db/backends/sqlite3/schema.py": " \n     def add_field(self, model, field):\n         \"\"\"Create a field on a model.\"\"\"\nif (\n# Primary keys and unique fields are not supported in ALTER TABLE\n# ADD COLUMN.\nfield.primary_key or field.unique or\n# Fields with default values cannot by handled by ALTER TABLE ADD\n# COLUMN statement because DROP DEFAULT is not supported in\n# ALTER TABLE.\nnot field.null or self.effective_default(field) is not None\n):\n             self._remake_table(model, create_field=field)\n         else:\n             super().add_field(model, field)\n"
    },
    "response": "{\"explanation\": \"The code in code sample 1 is defining a method to add a field to a model in Django, incorporating checks for nullability and uniqueness to determine if a table needs to be remade. The comments indicate that certain field types, like default values and unique fields, cannot be handled by SQLite's ALTER TABLE command. In code sample 2, the same function is provided but with a slightly modified logic and different comments concerning the same functionality, focusing on primary keys and unique fields for the same operations.\", \"is_clone\": true, \"classification\": \"type-3\", \"reasoning\": \"These code samples are type-3 clones because they exhibit syntactic similarity, but there are differences in the logic and comments. Code sample 2 incorporates a condition about primary keys that is not present in code sample 1, indicating alterations.\"}"
}