{
    "instance_id": "django__django-11179",
    "agent": "20241221_codestory_midwit_claude-3-5-sonnet_swe-search",
    "agent_patch": {
        "django/db/models/deletion.py": "index 92fe4affb9..68383c24ce 100644\n             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\n# Set primary key to None after deletion\nsetattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\n",
        "reproduce_error.py": "new file mode 100644\nindex 0000000000..3517b88205\nimport os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\n\nfrom django.conf import settings\nif not settings.configured:\nsettings.configure(\nDATABASES={\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n}\n},\nINSTALLED_APPS=[\n'django.contrib.contenttypes',\n'django.contrib.auth',\n],\nMIDDLEWARE=[],\nSECRET_KEY='dummy',\n)\n\nimport django\ndjango.setup()\n\nfrom django.db import models, connection\nfrom django.test import TestCase\n\nclass SimpleModel(models.Model):\nclass Meta:\napp_label = 'test_app'\nname = models.CharField(max_length=100)\n\n# Create the test table\nwith connection.schema_editor() as schema_editor:\nschema_editor.create_model(SimpleModel)\n\nclass TestDeletion(TestCase):\ndef test_pk_cleared_after_delete(self):\n# Create a simple model instance\nobj = SimpleModel.objects.create(name=\"test\")\npk_before_delete = obj.pk\n\n# Delete the instance\nobj.delete()\n\n# Check if PK is cleared\nprint(f\"PK before delete: {pk_before_delete}\")\nprint(f\"PK after delete: {obj.pk}\")\nassert obj.pk is None, f\"PK should be None after delete, but got {obj.pk}\"\n\nif __name__ == \"__main__\":\ntest_case = TestDeletion()\ntest_case._pre_setup()\ntry:\ntest_case.test_pk_cleared_after_delete()\nprint(\"Test passed successfully!\")\nexcept AssertionError as e:\nprint(f\"Test failed: {e}\")\nfinally:\ntest_case._post_teardown()\n\\ No newline at end of file\n"
    },
    "ground_truth_patch": {
        "django/db/models/deletion.py": "             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\nsetattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace and layout. The essential logic and structure of the two code samples are the same.\"}"
}