{
    "instance_id": "django__django-10914",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/conf/global_settings.py": "index acee9887d2..bdeec80610 100644\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\nFILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n",
        "test_default_upload_perm.py": "new file mode 100644\nindex 0000000000..9f40f1f6cb\n#!/usr/bin/env python3\nimport sys\nimport os\nimport shutil\nimport tempfile\nimport django\nfrom django.conf import settings\nfrom django.core.files.uploadedfile import TemporaryUploadedFile\nfrom django.core.files.storage import default_storage\n\ndef main():\nprint(\"Test script for default file upload permissions.\")\n\nif not settings.configured:\ntmp_dir = tempfile.mkdtemp(prefix=\"test_upload_perm_\")\nprint(f\"Configuring Django with MEDIA_ROOT={tmp_dir}\")\nsettings.configure(\nDEFAULT_FILE_STORAGE=\"django.core.files.storage.FileSystemStorage\",\nMEDIA_ROOT=tmp_dir,\nFILE_UPLOAD_HANDLERS=[\n'django.core.files.uploadhandler.MemoryFileUploadHandler',\n'django.core.files.uploadhandler.TemporaryFileUploadHandler'\n],\nINSTALLED_APPS=[],\nSECRET_KEY='testsecret',\nDEBUG=True,\n)\n\ndjango.setup()\n\n# Create 4MB of data (to ensure it surpasses the default memory upload limit).\nchunk_size = 4 * 1024 * 1024\nchunk = b'a' * chunk_size\n\n# Write it to a TemporaryUploadedFile so that Django\u2019s FileSystemStorage renames it.\ntmp_file = TemporaryUploadedFile(\"test_big.txt\", \"text/plain\", chunk_size, \"utf-8\")\ntmp_file.write(chunk)\ntmp_file.seek(0)\n\nprint(\"Saving with default_storage...\")\nsaved_name = default_storage.save(\"test_big.txt\", tmp_file)\n\nfile_path = default_storage.path(saved_name)\nprint(f\"File saved at {file_path}\")\n\nst_mode = os.stat(file_path).st_mode\nperms = oct(st_mode & 0o777)\nprint(f\"File permissions: {perms}\")\n\nexpected = \"0o644\"\nif perms != expected:\nprint(f\"FAIL - got {perms}, expected {expected}\")\nsys.exit(1)\nprint(\"PASS - file has perms 0o644\")\nsys.exit(0)\n\nif __name__ == \"__main__\":\nmain()\n",
        "tests/test_utils/tests.py": "index a1a113a26e..72da2c7fdd 100644\n     def test_override_file_upload_permissions(self):\n         \"\"\"\n         Overriding the FILE_UPLOAD_PERMISSIONS setting should be reflected in\nthe file_permissions_mode attribute of django.core.files.storage.default_storage.\nNow that the global default is 0o644, we assert that is the default.\n         \"\"\"\n# Expecting the new default is 0o644 (octal = 420 decimal).\nself.assertEqual(default_storage.file_permissions_mode, 0o644)\n         with self.settings(FILE_UPLOAD_PERMISSIONS=0o777):\n             self.assertEqual(default_storage.file_permissions_mode, 0o777)\n\n \n     def test_override_file_upload_directory_permissions(self):\n         \"\"\"\n"
    },
    "ground_truth_patch": {
        "django/conf/global_settings.py": "# The numeric mode to set newly-uploaded files to. The value should be a mode\n# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\nFILE_UPLOAD_PERMISSIONS = 0o644\n\n# The numeric mode to assign to newly-created directories, when uploading files.\n# The value should be a mode as you'd pass to os.chmod;\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace, layout, and comments. The content of the `global_settings.py` file is the same in both samples, with only some differences in formatting.\"}"
}