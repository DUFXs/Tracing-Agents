{
    "instance_id": "django__django-16819",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/db/migrations/operations/models.py": "index 967a91fdc8..d41337ddd0 100644\n     @property\n     def migration_name_fragment(self):\n         return \"%s_%s\" % (self.model_name_lower, self.index.name.lower())\ndef reduce(self, operation, app_label):\n\"\"\"\nIf followed immediately by RemoveIndex with the same model_name and index.name,\nremove both from the migration plan by returning [].\n\"\"\"\nif (\nisinstance(operation, RemoveIndex) and\nself.model_name_lower == operation.model_name_lower and\nself.index.name == operation.name\n):\nreturn []\nreturn super().reduce(operation, app_label)\n\n \n \n class RemoveIndex(IndexOperation):\n",
        "test_reduce_add_remove_index.py": "new file mode 100644\nindex 0000000000..8728e9a10e\nimport sys\nfrom django.db.migrations.optimizer import MigrationOptimizer\nfrom django.db.migrations.operations.models import AddIndex, RemoveIndex\nfrom django.db import models\n\nprint(\"Starting test for AddIndex-RemoveIndex optimization...\")\n\nmy_index = models.Index(fields=['foo'], name='my_index')\nops = [\nAddIndex(model_name='MyModel', index=my_index),\nRemoveIndex(model_name='MyModel', name='my_index'),\n]\n\nprint(\"Operations before optimization:\", ops)\noptimizer = MigrationOptimizer()\noptimized_ops = optimizer.optimize(ops, 'myapp')\nprint(\"Optimized operations:\", optimized_ops)\n\nif len(optimized_ops) == 0:\nprint(\"SUCCESS: AddIndex/RemoveIndex are optimized away.\")\nsys.exit(0)\nelse:\nprint(\"FAILURE: They were not optimized away.\")\nsys.exit(1)\n"
    },
    "ground_truth_patch": {
        "django/db/migrations/operations/models.py": "     def migration_name_fragment(self):\n         return \"%s_%s\" % (self.model_name_lower, self.index.name.lower())\n \ndef reduce(self, operation, app_label):\nif isinstance(operation, RemoveIndex) and self.index.name == operation.name:\nreturn []\nreturn super().reduce(operation, app_label)\n\n \n class RemoveIndex(IndexOperation):\n     \"\"\"Remove an index from a model.\"\"\"\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-3\", \"reasoning\": \"These code samples are type-3 clones because they share similar logic and structure but have modified statements (such as different levels of indentation and the removal of some contextual information). For example, the first code sample has detailed comments and additional functionality that are not present in the second code sample, indicating that they are syntactically similar but not identical.\"}"
}