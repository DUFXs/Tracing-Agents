{
    "instance_id": "matplotlib__matplotlib-25287",
    "agent": "20250110_learn_by_interact_claude3.5",
    "agent_patch": {
        "lib/matplotlib/axis.py": "index c0e706e2b3..2c32cf380a 100644\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=(mpl.rcParams['xtick.color'] \nif mpl.rcParams['xtick.labelcolor'] == 'inherit' \nelse mpl.rcParams['xtick.labelcolor']),\n         )\n         self.offset_text_position = 'bottom'\n \n\n     def contains(self, mouseevent):\n         \"\"\"Test whether the mouse event occurred in the x-axis.\"\"\"\n         inside, info = self._default_contains(mouseevent)\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=(mpl.rcParams['ytick.color'] \nif mpl.rcParams['ytick.labelcolor'] == 'inherit' \nelse mpl.rcParams['ytick.labelcolor']),\n         )\n\n         self.offset_text_position = 'left'\n \n     def contains(self, mouseevent):\n             return int(np.floor(length / size))\n         else:\n             return 2**31 - 1\n\n\ndiff --git \"a/lib/matplotlib/axis.py\\\"\" \"b/lib/matplotlib/axis.py\\\"\"\nnew file mode 100644\nindex 0000000000..dd7eb5d80d\nfontsize=mpl.rcParams['ytick.labelsize'],\ncolor=(mpl.rcParams['ytick.color'] \nif mpl.rcParams['ytick.labelcolor'] == 'inherit' \nelse mpl.rcParams['ytick.labelcolor']),\n"
    },
    "ground_truth_patch": {
        "lib/matplotlib/axis.py": "         )\n         self.label_position = 'bottom'\n \nif mpl.rcParams['xtick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['xtick.color']\nelse:\ntick_color = mpl.rcParams['xtick.labelcolor']\n\n         self.offsetText.set(\n             x=1, y=0,\n             verticalalignment='top', horizontalalignment='right',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'bottom'\n \n                 mtransforms.IdentityTransform(), self.axes.transAxes),\n         )\n         self.label_position = 'left'\n\nif mpl.rcParams['ytick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['ytick.color']\nelse:\ntick_color = mpl.rcParams['ytick.labelcolor']\n\n         # x in axes coords, y in display coords(!).\n         self.offsetText.set(\n             x=0, y=0.5,\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'left'\n \n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-2\", \"reasoning\": \"These code samples represent type-2 clones because they vary in the naming of identifiers and have some differing literal values while retaining much of the same structure and functionality. The variable names for color assignments differ slightly, yet their functional equivalence and use of structure are similar enough to classify them as type-2 clones.\"}"
}