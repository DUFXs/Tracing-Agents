{
    "instance_id": "django__django-16569",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/forms/formsets.py": "index 235aaf844c..5b05275911 100644\n                     required=False,\n                     widget=self.get_ordering_widget(),\n                 )\nif self.can_delete and (self.can_delete_extra or (index is not None and index < initial_form_count)):\n             form.fields[DELETION_FIELD_NAME] = BooleanField(\n                 label=_(\"Delete\"),\n                 required=False,\n                 widget=self.get_deletion_widget(),\n             )\n\n \n     def add_prefix(self, index):\n         return \"%s-%s\" % (self.prefix, index)\n",
        "test_formsets_bug.py": "new file mode 100644\nindex 0000000000..4c7905db3a\nimport sys\nimport traceback\nimport os\nimport django\nfrom django import forms\n\nprint(\"Step 1: Starting test script for the 'index=None' bug in FormSet.add_fields().\")\n\nclass MyForm(forms.Form):\nmy_field = forms.CharField()\n\ndef main():\nprint(\"Step 2: Configuring settings for Django.\")\nsettings_file = os.path.splitext(os.path.basename(__file__))[0]\ndjango.conf.settings.configure(\nDEBUG=True,\nMIDDLEWARE_CLASSES=[],\nROOT_URLCONF=settings_file,\n)\ndjango.setup()\n\nprint(\"Step 3: Creating formset with can_delete=True, can_delete_extra=False, and calling empty_form.\")\ntry:\nMyFormSet = forms.formset_factory(\nform=MyForm,\ncan_delete=True,\ncan_delete_extra=False,\n)\nmy_formset = MyFormSet(initial=None)\n_ = my_formset.empty_form  # <-- This triggers the bug if not fixed\nprint(\"No exception occurred. The bug is fixed or not present.\")\nprint(\"Exiting with status 0.\")\nsys.exit(0)\nexcept Exception as e:\nprint(\"Exception encountered. This indicates the bug is still present.\")\nprint(\"Exception details:\")\ntraceback.print_exc()\nprint(\"Exiting with status 1.\")\nsys.exit(1)\n\nif __name__ == '__main__':\nmain()\n"
    },
    "ground_truth_patch": {
        "django/forms/formsets.py": "                     required=False,\n                     widget=self.get_ordering_widget(),\n                 )\nif self.can_delete and (\nself.can_delete_extra or (index is not None and index < initial_form_count)\n):\n             form.fields[DELETION_FIELD_NAME] = BooleanField(\n                 label=_(\"Delete\"),\n                 required=False,\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace. The structure and content of the code lines match, with only the placement of newlines affecting the visual layout.\"}"
}