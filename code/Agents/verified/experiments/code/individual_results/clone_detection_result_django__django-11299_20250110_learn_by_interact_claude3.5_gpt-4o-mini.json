{
    "instance_id": "django__django-11299",
    "agent": "20250110_learn_by_interact_claude3.5",
    "agent_patch": {
        "django/db/models/sql/query.py": "index b99f03cd88..de198fb610 100644\n             if isinstance(child, Node):\n                 child_clause, needed_inner = self._add_q(\n                     child, used_aliases, branch_negated,\ncurrent_negated, allow_joins, split_subq, simple_col=simple_col)\n                 joinpromoter.add_votes(needed_inner)\n\n             else:\n                 child_clause, needed_inner = self.build_filter(\n                     child, can_reuse=used_aliases, branch_negated=branch_negated,\n         query.promote_joins(to_promote)\n         query.demote_joins(to_demote)\n         return to_demote\n\ndiff --git \"a/django/db/models/sql/query.py\\\"\" \"b/django/db/models/sql/query.py\\\"\"\nnew file mode 100644\nindex 0000000000..65fa1e7764\nchild_clause, needed_inner = self._add_q(\nchild, used_aliases, branch_negated,\ncurrent_negated, allow_joins, split_subq, simple_col=simple_col)\njoinpromoter.add_votes(needed_inner)\n",
        "test_constraint.py": "new file mode 100644\nindex 0000000000..6fb57e1a7f\nfrom django.conf import settings\nfrom django.db import models\nfrom django.db.migrations.operations.models import CreateModel, AddConstraint\nfrom django.db.migrations.state import ProjectState\nfrom django.db.migrations.migration import Migration\nfrom django.db.backends.sqlite3.schema import DatabaseSchemaEditor\nfrom django.db.backends.sqlite3.base import DatabaseWrapper\n\n# Configure Django settings before importing models\nif not settings.configured:\nsettings.configure(\nDATABASES={\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n'TIME_ZONE': None,\n'CONN_MAX_AGE': 0,\n'OPTIONS': {},\n'AUTOCOMMIT': True,\n}\n},\nINSTALLED_APPS=['django.contrib.contenttypes'],\nMIDDLEWARE=[],\nTIME_ZONE=None,\nUSE_TZ=False,\n)\nimport django\ndjango.setup()\n\nclass TestConstraint(models.Model):\nfield_1 = models.IntegerField(blank=True, null=True)\nflag = models.BooleanField(blank=False, null=False)\n\nclass Meta:\napp_label = 'testapp'\nconstraints = [\nmodels.CheckConstraint(\ncheck=models.Q(flag__exact=True, field_1__isnull=False) | models.Q(flag__exact=False),\nname='field_1_has_value_if_flag_set'\n),\n]\n\n# Set up migration\nmigration = Migration('testapp', '0002_test')\nmigration.operations = [\nCreateModel(\nname='TestConstraint',\nfields=[\n('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n('field_1', models.IntegerField(blank=True, null=True)),\n('flag', models.BooleanField()),\n],\n),\nAddConstraint(\nmodel_name='testconstraint',\nconstraint=models.CheckConstraint(\ncheck=models.Q(models.Q(('field_1__isnull', False), ('flag__exact', True)), ('flag__exact', False), _connector='OR'),\nname='field_1_has_value_if_flag_set'\n),\n),\n]\n\n# Create database connection\nconnection = DatabaseWrapper({\n'NAME': ':memory:',\n'TIME_ZONE': None,\n'CONN_MAX_AGE': 0,\n'OPTIONS': {},\n'AUTOCOMMIT': True,\n'ENGINE': 'django.db.backends.sqlite3',\n})\n\n# Apply migration\nproject_state = ProjectState()\nwith connection.schema_editor() as schema_editor:\ntry:\nmigration.apply(project_state, schema_editor)\nprint(\"Migration successful!\")\nexcept Exception as e:\nprint(f\"Migration failed: {str(e)}\")\n\n"
    },
    "ground_truth_patch": {
        "django/db/models/sql/query.py": "             if isinstance(child, Node):\n                 child_clause, needed_inner = self._add_q(\n                     child, used_aliases, branch_negated,\ncurrent_negated, allow_joins, split_subq, simple_col)\n                 joinpromoter.add_votes(needed_inner)\n             else:\n                 child_clause, needed_inner = self.build_filter(\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace, layout, and possibly comments. The significant content regarding the conditionals and function calls remains unchanged.\"}"
}