{
    "instance_id": "django__django-15467",
    "agent": "20250110_learn_by_interact_claude3.5",
    "agent_patch": {
        "django/contrib/admin/options.py": "index 64be087bf1..539c3cd6a8 100644\n                         \"class\": get_ul_class(self.radio_fields[db_field.name]),\n                     }\n                 )\nkwargs['empty_label'] = (kwargs.get('empty_label') or _('None')) if db_field.blank else None\n\n \n         if \"queryset\" not in kwargs:\n             queryset = self.get_field_queryset(db, db_field, request)\n \n class TabularInline(InlineModelAdmin):\n     template = \"admin/edit_inline/tabular.html\"\n\n",
        "test_empty_label.py": "new file mode 100644\nindex 0000000000..7c7440ae54\nimport os\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\nsettings.configure(\nDATABASES={\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n}\n},\nINSTALLED_APPS=[\n'django.contrib.admin',\n'django.contrib.auth',\n'django.contrib.contenttypes',\n'django.contrib.sessions',\n'django.contrib.messages',\n'testapp',\n],\nSECRET_KEY='dummy-key-for-test'\n)\ndjango.setup()\n\nfrom django.contrib import admin\nfrom django.db import models\nfrom django.contrib.admin.sites import AdminSite\n\nclass MyModel(models.Model):\nname = models.CharField(max_length=100)\n\nclass Meta:\napp_label = 'testapp'\n\nclass RelatedModel(models.Model):\nmyfield = models.ForeignKey(MyModel, on_delete=models.CASCADE, blank=True, null=True)\n\nclass Meta:\napp_label = 'testapp'\n\nclass MyModelAdmin(admin.ModelAdmin):\nradio_fields = {'myfield': admin.VERTICAL}\n\ndef formfield_for_foreignkey(self, db_field, *args, **kwargs):\nif db_field.name == 'myfield':\nkwargs['empty_label'] = \"I WANT TO SET MY OWN EMPTY LABEL\"\nreturn super().formfield_for_foreignkey(db_field, *args, **kwargs)\n\nif __name__ == '__main__':\nsite = AdminSite()\nadmin_instance = MyModelAdmin(RelatedModel, site)\ndb_field = RelatedModel._meta.get_field('myfield')\nformfield = admin_instance.formfield_for_foreignkey(db_field, None)\nprint(f\"Empty label: {formfield.empty_label}\")\n",
        "testapp/apps.py": "new file mode 100644\nindex 0000000000..612df8e765\nfrom django.apps import AppConfig\n\nclass TestappConfig(AppConfig):\nname = 'testapp'\ndefault_auto_field = 'django.db.models.AutoField'\n"
    },
    "ground_truth_patch": {
        "django/contrib/admin/options.py": "                         \"class\": get_ul_class(self.radio_fields[db_field.name]),\n                     }\n                 )\nkwargs[\"empty_label\"] = (\nkwargs.get(\"empty_label\", _(\"None\")) if db_field.blank else None\n)\n \n         if \"queryset\" not in kwargs:\n             queryset = self.get_field_queryset(db, db_field, request)\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for whitespace differences and how the `empty_label` is accessed/assigned (using single vs double quotes and a slight difference in formatting). The logic remains exactly the same.\"}"
}