{
    "instance_id": "django__django-15814",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/db/models/sql/query.py": "index 33cc636b22..5036335bec 100644\n                     cur_model = source.related_model\n                 else:\n                     cur_model = source.remote_field.model\nopts = cur_model._meta.concrete_model._meta\n                 # Even if we're \"just passing through\" this model, we must add\n                 # both the current model's pk and the related reference field\n                 # (if it's not a reverse relation) to the things we select.\n",
        "test_bug_app/__init__.py": "new file mode 100644\nindex 0000000000..695ed15fe5\n# Empty __init__.py so that \"test_bug_app\" is a valid package\n",
        "test_bug_app/migrations/0001_initial.py": "new file mode 100644\nindex 0000000000..08e3bc3719\n# Generated by Django 4.2.dev20220702144524 on 2025-01-13 02:16\n\nfrom django.db import migrations, models\nimport django.db.models.deletion\n\n\nclass Migration(migrations.Migration):\n\ninitial = True\n\ndependencies = []\n\noperations = [\nmigrations.CreateModel(\nname=\"CustomModel\",\nfields=[\n(\n\"id\",\nmodels.AutoField(\nauto_created=True,\nprimary_key=True,\nserialize=False,\nverbose_name=\"ID\",\n),\n),\n(\"name\", models.CharField(max_length=16)),\n],\n),\nmigrations.CreateModel(\nname=\"ProxyCustomModel\",\nfields=[],\noptions={\n\"proxy\": True,\n\"indexes\": [],\n\"constraints\": [],\n},\nbases=(\"test_bug_app.custommodel\",),\n),\nmigrations.CreateModel(\nname=\"AnotherModel\",\nfields=[\n(\n\"id\",\nmodels.AutoField(\nauto_created=True,\nprimary_key=True,\nserialize=False,\nverbose_name=\"ID\",\n),\n),\n(\n\"custom\",\nmodels.ForeignKey(\nblank=True,\nnull=True,\non_delete=django.db.models.deletion.SET_NULL,\nto=\"test_bug_app.proxycustommodel\",\n),\n),\n],\n),\n]\n",
        "test_bug_app/migrations/__init__.py": "new file mode 100644\nindex 0000000000..e69de29bb2\n",
        "test_bug_app/models.py": "new file mode 100644\nindex 0000000000..064c5be6b1\nfrom django.db import models\n\nclass CustomModel(models.Model):\nname = models.CharField(max_length=16)\nclass Meta:\napp_label = \"test_bug_app\"\n\nclass ProxyCustomModel(CustomModel):\nclass Meta:\nproxy = True\napp_label = \"test_bug_app\"\n\nclass AnotherModel(models.Model):\ncustom = models.ForeignKey(\nProxyCustomModel,\non_delete=models.SET_NULL,\nnull=True,\nblank=True,\n)\nclass Meta:\napp_label = \"test_bug_app\"\n",
        "test_bug_proxy_model_selectrelated_only.py": "new file mode 100644\nindex 0000000000..11703edea4\nimport sys\nimport os\nimport django\n\nprint(\"Running test_bug_proxy_model_selectrelated_only.py...\")\n\nfrom django.conf import settings\nif not settings.configured:\nsettings.configure(\nINSTALLED_APPS=[\n\"django.contrib.contenttypes\",\n\"django.contrib.auth\",\n\"test_bug_app\",  # Our new test app\n],\nDATABASES={\n\"default\": {\n\"ENGINE\": \"django.db.backends.sqlite3\",\n\"NAME\": \":memory:\",\n}\n},\nMIDDLEWARE_CLASSES=[],\nSECRET_KEY=\"xyz\",\n)\n\ndjango.setup()\n\nfrom django.core.management import call_command\nfrom test_bug_app.models import CustomModel, ProxyCustomModel, AnotherModel\n\ndef main():\nprint(\"Running makemigrations for test_bug_app...\")\ncall_command(\"makemigrations\", \"test_bug_app\", verbosity=1)\n\nprint(\"Running migrate...\")\ncall_command(\"migrate\", verbosity=1)\nprint(\"Database set up.\")\n\n# Insert an object to ensure the SELECT code path is triggered.\nc = CustomModel.objects.create(name=\"Alice\")\npm = ProxyCustomModel.objects.get(pk=c.pk)\nAnotherModel.objects.create(custom=pm)\n\nprint(\"Attempting: AnotherModel.objects.select_related('custom').only('custom__name').all()\")\ntry:\nresults = list(AnotherModel.objects.select_related(\"custom\").only(\"custom__name\"))\nprint(\"Got results:\", results)\nprint(\"Expected behavior: No crash.\")\nprint(\"Test PASSED. Exiting with code 0.\")\nsys.exit(0)\nexcept Exception as exc:\nprint(\"Caught Exception:\", exc)\nprint(\"This indicates the bug still exists. Exiting with code 1.\")\nsys.exit(1)\n\nif __name__ == \"__main__\":\nmain()\n",
        "tests/__init__.py": "new file mode 100644\nindex 0000000000..e69de29bb2\n"
    },
    "ground_truth_patch": {
        "django/db/models/sql/query.py": "                     cur_model = source.related_model\n                 else:\n                     cur_model = source.remote_field.model\ncur_model = cur_model._meta.concrete_model\n                 opts = cur_model._meta\n                 # Even if we're \"just passing through\" this model, we must add\n                 # both the current model's pk and the related reference field\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace and layout. The code logic and structure are the same across both samples.\"}"
}