{
    "instance_id": "matplotlib__matplotlib-25287",
    "agent": "20241221_codestory_midwit_claude-3-5-sonnet_swe-search",
    "agent_patch": {
        "lib/matplotlib/axis.py": "index c0e706e2b3..410987a95c 100644\n                     self._major_tick_kw.get('label1On', False)\n                     or self._major_tick_kw.get('label2On', False))\n             if 'labelcolor' in kwtrans:\nself.offsetText.set_color(\nkwtrans['labelcolor'] if kwtrans.get('labelcolor') != 'inherit'\nelse kwtrans.get('color', mpl.rcParams[f'{self.__name__}.color'])\n)\n \n         self.stale = True\n \n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=(mpl.rcParams['xtick.color'] \nif mpl.rcParams['xtick.labelcolor'] == 'inherit'\nelse mpl.rcParams['xtick.labelcolor']),\n         )\n         self.offset_text_position = 'bottom'\n \n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=(mpl.rcParams['ytick.color'] \nif mpl.rcParams['ytick.labelcolor'] == 'inherit'\nelse mpl.rcParams['ytick.labelcolor']),\n         )\n         self.offset_text_position = 'left'\n \n",
        "reproduce_error.py": "new file mode 100644\nindex 0000000000..195c10489b\nimport matplotlib.pyplot as plt\n\n# Set the ytick label color to red\nplt.rcParams.update({'ytick.labelcolor': 'red'})\n\n# Create a figure and plot\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\nax.plot([1.01e9,1.02e9,1.03e9])\n\n# Save the figure to verify the colors\nplt.savefig('wrong_color.png')\n\\ No newline at end of file\n"
    },
    "ground_truth_patch": {
        "lib/matplotlib/axis.py": "         )\n         self.label_position = 'bottom'\n \nif mpl.rcParams['xtick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['xtick.color']\nelse:\ntick_color = mpl.rcParams['xtick.labelcolor']\n\n         self.offsetText.set(\n             x=1, y=0,\n             verticalalignment='top', horizontalalignment='right',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'bottom'\n \n                 mtransforms.IdentityTransform(), self.axes.transAxes),\n         )\n         self.label_position = 'left'\n\nif mpl.rcParams['ytick.labelcolor'] == 'inherit':\ntick_color = mpl.rcParams['ytick.color']\nelse:\ntick_color = mpl.rcParams['ytick.labelcolor']\n\n         # x in axes coords, y in display coords(!).\n         self.offsetText.set(\n             x=0, y=0.5,\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\ncolor=tick_color\n         )\n         self.offset_text_position = 'left'\n \n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-3\", \"reasoning\": \"These code samples are type-3 clones because they share a lot of syntactical similarity in the context of matplotlib axis configuration code, but there are additional statements and modifications present in each code sample. For example, the handling of `labelcolor` and the way tick colors are set differs between the two samples, indicating that they have both added and modified statements.\"}"
}