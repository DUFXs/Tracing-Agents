{
    "instance_id": "django__django-12308",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "django/contrib/admin/utils.py": "index e4ddc8f017..7a284a2d5f 100644\n import decimal\n from collections import defaultdict\n \nfrom django.db.models import JSONField\n\n\n\n from django.core.exceptions import FieldDoesNotExist\n from django.db import models, router\n from django.db.models.constants import LOOKUP_SEP\n         return formats.number_format(value)\n     elif isinstance(field, models.FileField) and value:\n         return format_html('<a href=\"{}\">{}</a>', value.url, value)\nelif isinstance(field, JSONField):\n# Use the form field to properly prepare the JSON for display\nform_field = field.formfield()\ntry:\nreturn form_field.prepare_value(value)\nexcept Exception:\nreturn display_for_value(value, empty_value_display)\n     else:\n         return display_for_value(value, empty_value_display)\n \n \n\n def display_for_value(value, empty_value_display, boolean=False):\n     from django.contrib.admin.templatetags.admin_list import _boolean_icon\n \n",
        "test_readonly_jsonfield_display.py": "new file mode 100644\nindex 0000000000..37d3fed07c\n#!/usr/bin/env python\n\nimport sys\nimport json\n\nfrom django.db import models\nfrom django.contrib.admin.utils import display_for_field\n\ntry:\nfrom django.db.models import JSONField\nexcept ImportError:\n# For older Django versions that had JSONField in postgres\nfrom django.contrib.postgres.fields import JSONField\n\ndef main():\nprint(\"Running JSONField display test...\")\ntest_value = {\"foo\": \"bar\"}\nfield = JSONField(null=True)\ndisplayed = display_for_field(test_value, field, empty_value_display=\"(empty)\")\nprint(\"display_for_field returned:\", displayed)\n\n# Attempt to parse the returned display string as JSON:\ntry:\nparsed = json.loads(displayed)\nprint(\"JSON parse succeeded:\", parsed)\nif parsed == test_value:\nprint(\"Test passed: JSON parsed exactly as expected.\")\nsys.exit(0)\nelse:\nprint(\"Test failed: JSON loaded, but not as expected. parsed =\", parsed)\nsys.exit(1)\nexcept json.JSONDecodeError as e:\nprint(\"Test failed: Could not parse display string as valid JSON.\")\nprint(\"JSONDecodeError:\", e)\nsys.exit(1)\n\nif __name__ == \"__main__\":\nmain()\n"
    },
    "ground_truth_patch": {
        "django/contrib/admin/utils.py": "         return formats.number_format(value)\n     elif isinstance(field, models.FileField) and value:\n         return format_html('<a href=\"{}\">{}</a>', value.url, value)\nelif isinstance(field, models.JSONField) and value:\ntry:\nreturn field.get_prep_value(value)\nexcept TypeError:\nreturn display_for_value(value, empty_value_display)\n     else:\n         return display_for_value(value, empty_value_display)\n \n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-3\", \"reasoning\": \"These code samples are type-3 clones because they exhibit syntactic similarity while having some modifications in the structure and statements. The first sample includes a broader context of the function and handles JSONField while the second sample focuses on specific logic for a JSONField, showcasing that though both relate to handling display logic, they are not identical in terms of the statements present.\"}"
}