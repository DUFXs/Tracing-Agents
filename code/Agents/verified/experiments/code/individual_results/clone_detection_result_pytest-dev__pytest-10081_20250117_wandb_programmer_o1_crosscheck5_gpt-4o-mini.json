{
    "instance_id": "pytest-dev__pytest-10081",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "src/_pytest/unittest.py": "index 851e4943b..58a7eee0b 100644\n         pass\n \n     def runtest(self) -> None:\nimport pytest\n         from _pytest.debugging import maybe_wrap_pytest_function_for_tracing\n\n         assert self._testcase is not None\n\n# If the test method is marked skip, bail out immediately.\n# This handles method-level @unittest.skip decorations.\nif _is_skipped(self.obj):\nreason = getattr(self.obj, \"__unittest_skip_why__\", \"method skipped\")\nraise pytest.skip.Exception(reason, _use_item_location=True)\n\n# If the entire class is skipped, bail out immediately\n# so that unittest doesn't call tearDown under --pdb.\nif _is_skipped(self._testcase.__class__):\nreason = getattr(self._testcase.__class__, \"__unittest_skip_why__\", \"class skipped\")\nraise pytest.skip.Exception(reason, _use_item_location=True)\n\n         maybe_wrap_pytest_function_for_tracing(self)\n\n         # Let the unittest framework handle async functions.\n         if is_async_function(self.obj):\n             # Type ignored because self acts as the TestResult, but is not actually one.\n             self._testcase(result=self)  # type: ignore[arg-type]\n         else:\nif self.config.getoption(\"usepdb\"):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, \"tearDown\", lambda *args: None)\n\n             setattr(self._testcase, self.name, self.obj)\n             try:\n                 self._testcase(result=self)  # type: ignore[arg-type]\n             finally:\n                 delattr(self._testcase, self.name)\n\n\n\n\n\n \n     def _prunetraceback(\n         self, excinfo: _pytest._code.ExceptionInfo[BaseException]\n",
        "test_repro_skip_class.py": "new file mode 100644\nindex 000000000..4a3134bf6\nimport unittest\n\n@unittest.skip(\"hello\")\nclass MyTestCase(unittest.TestCase):\ndef setUp(self):\npass\n\ndef tearDown(self):\nraise RuntimeError(\"Bug: tearDown was called despite @skip with --pdb\")\n\ndef test_one(self):\npass\n",
        "test_skip_class_pdb_script.py": "new file mode 100644\nindex 000000000..4bbcc29bf\nimport sys\nimport subprocess\n\ndef main():\nprint(\"Creating test_repro_skip_class.py with correct multiline syntax.\")\nwith open(\"test_repro_skip_class.py\", \"w\") as f:\nf.write(\n\"\"\"import unittest\n\n@unittest.skip(\"hello\")\nclass MyTestCase(unittest.TestCase):\ndef setUp(self):\npass\n\ndef tearDown(self):\nraise RuntimeError(\"Bug: tearDown was called despite @skip with --pdb\")\n\ndef test_one(self):\npass\n\"\"\"\n)\n\nprint(\"Running pytest --pdb on test_repro_skip_class.py\")\nres = subprocess.run([\"pytest\", \"--pdb\", \"test_repro_skip_class.py\"])\n\nprint(f\"Return code: {res.returncode}\")\nif res.returncode == 0:\nprint(\"Bug is fixed: tearDown did NOT run for a class-level skip with --pdb.\")\nsys.exit(0)\nelse:\nprint(\"Bug is still present (or other error).\")\nsys.exit(1)\n\nif __name__ == \"__main__\":\nmain()\n"
    },
    "ground_truth_patch": {
        "src/_pytest/unittest.py": "# Arguably we could always postpone tearDown(), but this changes the moment where the\n# TestCase instance interacts with the results object, so better to only do it\n# when absolutely needed.\n# We need to consider if the test itself is skipped, or the whole class.\nassert isinstance(self.parent, UnitTestCase)\nskipped = _is_skipped(self.obj) or _is_skipped(self.parent.obj)\nif self.config.getoption(\"usepdb\") and not skipped:\n    self._explicit_tearDown = self._testcase.tearDown\n    setattr(self._testcase, \"tearDown\", lambda *args: None)\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-3\", \"reasoning\": \"These code samples are type-3 clones because they exhibit syntactical similarities but have different statements included. Both deal with the setup and teardown process in a unittest context, but one includes additional logic not present in the other regarding the treatment of skipped tests.\"}"
}