{
    "instance_id": "astropy__astropy-12907",
    "agent": "20250117_wandb_programmer_o1_crosscheck5",
    "agent_patch": {
        "astropy/modeling/separable.py": "index a308e27297..8dadee8ed2 100644\n     -------\n     result : ndarray\n         Result from this operation.\n     \"\"\"\n     noutp = _compute_n_outputs(left, right)\n \n     else:\n         cleft = np.zeros((noutp, left.shape[1]))\n         cleft[: left.shape[0], : left.shape[1]] = left\n\n     if isinstance(right, Model):\n         cright = _coord_matrix(right, 'right', noutp)\n     else:\n         cright = np.zeros((noutp, right.shape[1]))\ncright[-right.shape[0]:, -right.shape[1]:] = right\n \n     return np.hstack([cleft, cright])\n \n \n\n def _cdot(left, right):\n     \"\"\"\n     Function corresponding to \"|\" operation.\n",
        "test_nested_compound_model.py": "new file mode 100644\nindex 0000000000..a23b74f58f\n#!/usr/bin/env python\nimport sys\nimport numpy as np\n\nprint(\"Starting test for nested compound model separability...\")\n\n# Reproduce the user\u2019s scenario\nfrom astropy.modeling import models as m\nfrom astropy.modeling.separable import separability_matrix\n\n# Build a nested compound model\ncm = m.Linear1D(10) & m.Linear1D(5)\nnested_model = m.Pix2Sky_TAN() & cm\n\nactual = separability_matrix(nested_model)\n\n# We expect row 2 to be [False,False, True, False], row 3 to be [False,False,False, True].\nexpected = np.array([\n[ True,  True, False, False],\n[ True,  True, False, False],\n[False, False,  True, False],\n[False, False, False,  True]\n], dtype=bool)\n\nprint(\"Actual separability matrix:\")\nprint(actual)\nprint(\"Expected separability matrix:\")\nprint(expected)\n\nif actual.shape != expected.shape:\nprint(f\"Shape is wrong: got {actual.shape}, expected {expected.shape}\")\nsys.exit(1)\n\n# We do a direct comparison\nif not np.array_equal(actual, expected):\nprint(\"Test FAILED: the separability matrix is unexpectedly different.\")\nsys.exit(1)\n\nprint(\"Test PASSED: the separability matrix matches expected for nested compound model.\")\nsys.exit(0)\n"
    },
    "ground_truth_patch": {
        "astropy/modeling/separable.py": "         cright = _coord_matrix(right, 'right', noutp)\n     else:\n         cright = np.zeros((noutp, right.shape[1]))\ncright[-right.shape[0]:, -right.shape[1]:] = right\n \n     return np.hstack([cleft, cright])\n \n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they are identical except for differences in whitespace and layout. The code in both samples refers to the same functionality, with no changes in logic or structure.\"}"
}