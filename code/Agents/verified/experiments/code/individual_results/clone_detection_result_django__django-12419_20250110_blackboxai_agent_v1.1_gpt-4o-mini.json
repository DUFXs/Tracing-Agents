{
    "instance_id": "django__django-12419",
    "agent": "20250110_blackboxai_agent_v1.1",
    "agent_patch": {
        ".gitignore": "index 238fb3a200..521baaa795 100644\n tests/.coverage\n build/\n tests/report/\n.aider/\n",
        "django/conf/global_settings.py": "index 09c9b95d26..8bb59a4037 100644\n SECURE_HSTS_PRELOAD = False\n SECURE_HSTS_SECONDS = 0\n SECURE_REDIRECT_EXEMPT = []\nSECURE_REFERRER_POLICY = 'same-origin'\n SECURE_SSL_HOST = None\n SECURE_SSL_REDIRECT = False\n",
        "tests/security/__init__.py": "new file mode 100644\nindex 0000000000..8b13789179\n\n",
        "tests/security/test_referrer_policy.py": "new file mode 100644\nindex 0000000000..0f6ce5dc3d\n\nfrom django.test import TestCase, Client\nfrom django.conf import settings\n\nclass ReferrerPolicyTests(TestCase):\ndef setUp(self):\nself.client = Client()\n\ndef test_default_referrer_policy(self):\n# Test that default same-origin policy is applied\nresponse = self.client.get('/')\nself.assertEqual(response['Referrer-Policy'], 'same-origin')\n\ndef test_custom_referrer_policy(self):\n# Test that custom values can override default\nwith self.settings(SECURE_REFERRER_POLICY='strict-origin'):\nresponse = self.client.get('/')\nself.assertEqual(response['Referrer-Policy'], 'strict-origin')\n\ndef test_none_referrer_policy(self):\n# Test that None value removes the header\nwith self.settings(SECURE_REFERRER_POLICY=None):\nresponse = self.client.get('/')\nself.assertNotIn('Referrer-Policy', response)\n",
        "tests/security/test_settings.py": "new file mode 100644\nindex 0000000000..4f4db06857\n\nDATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',\n}\n}\n\nSECRET_KEY = 'dummy-key-for-tests'\n\nMIDDLEWARE = [\n'django.middleware.security.SecurityMiddleware',\n]\n\nROOT_URLCONF = 'tests.security.urls'\n\nINSTALLED_APPS = [\n'django.contrib.contenttypes',\n'django.contrib.auth',\n'tests.security',\n]\n",
        "tests/security/urls.py": "new file mode 100644\nindex 0000000000..045a04be19\n\nfrom django.http import HttpResponse\nfrom django.urls import path\n\ndef test_view(request):\nreturn HttpResponse('Test view')\n\nurlpatterns = [\npath('', test_view),\n]\n"
    },
    "ground_truth_patch": {
        "django/conf/global_settings.py": " SECURE_HSTS_PRELOAD = False\n SECURE_HSTS_SECONDS = 0\n SECURE_REDIRECT_EXEMPT = []\nSECURE_REFERRER_POLICY = 'same-origin'\n SECURE_SSL_HOST = None\n SECURE_SSL_REDIRECT = False\n"
    },
    "response": "{\"is_clone\": true, \"classification\": \"type-1\", \"reasoning\": \"These code samples are type-1 clones because they contain the same code with differences only in whitespace and layout. The actual content of the 'django/conf/global_settings.py' file is identical, differing only in the presence of leading whitespace.\"}"
}